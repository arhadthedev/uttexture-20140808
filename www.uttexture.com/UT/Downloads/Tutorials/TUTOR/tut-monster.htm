<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 FINAL//EN">

<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">

<TITLE>Second Edition</TITLE>
<CENTER>
<META NAME="Generator" CONTENT="NetObjects Fusion 3.0.1 for Windows">

</HEAD>

<BODY  BGCOLOR="#000000" LINK="#FFFFCC" VLINK="#FF9966" TEXT="#FFFFFF" TOPMARGIN=0 LEFTMARGIN=0 MARGINWIDTH=0 MARGINHEIGHT=0>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=752>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=8 HEIGHT =6><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =8 HEIGHT=1 BORDER=0></TD>
	<TD></TD>
	<TD WIDTH=162><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =162 HEIGHT=1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD HEIGHT =131></TD>
	<TD WIDTH=582><IMG id="Banner2" HEIGHT=131 WIDTH=582 SRC="../assets/images/auto_generated_images/Monster_ElasticBanner.gif"  BORDER=0  ALT=" Monsters, Creatures and Things " ></TD>
	<TD></TD>
   </TR>
  </TABLE><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH=752>
<TR VALIGN="top" ALIGN="left">
<TD>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=131>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=8 HEIGHT =228><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =8 HEIGHT=1 BORDER=0></TD>
	<TD WIDTH=123>
	  <TABLE id="VerticalNavigationBar2" BORDER=0 CELLSPACING=0 CELLPADDING=0  WIDTH=123 >
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../index.html"><IMG id="NavigationButton133" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/index_AltElasticButton.gif"  BORDER=0  ALT=" Home " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/overview.html"><IMG id="NavigationButton134" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/overview_AltElasticButton.gif"  BORDER=0  ALT=" Overview " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/beginning.html"><IMG id="NavigationButton135" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/beginning_AltElasticButton.gif"  BORDER=0  ALT=" Starting " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/interiors.html"><IMG id="NavigationButton136" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/interiors_AltElasticButton.gif"  BORDER=0  ALT=" Interiors " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/exteriors.html"><IMG id="NavigationButton137" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/exteriors_AltElasticButton.gif"  BORDER=0  ALT=" Exteriors " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/triggers.html"><IMG id="NavigationButton138" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/triggers_AltElasticButton.gif"  BORDER=0  ALT=" Triggers " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/movers.html"><IMG id="NavigationButton139" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/movers_AltElasticButton.gif"  BORDER=0  ALT=" Movers " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/skybox.html"><IMG id="NavigationButton140" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/skybox_AltElasticButton.gif"  BORDER=0  ALT=" Skybox " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/decorate.html"><IMG id="NavigationButton141" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/decorate_AltElasticButton.gif"  BORDER=0  ALT=" Decorations " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/inventory.html"><IMG id="NavigationButton142" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/Inventory_AltElasticButton.gif"  BORDER=0  ALT=" Inventory " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/monster.html"><IMG id="NavigationButton143" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/Monster_AltElasticButtonOn.gif"  BORDER=0  ALT=" Monsters " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=123 HEIGHT=19><A HREF="../html/summary.html"><IMG id="NavigationButton144" HEIGHT=19 WIDTH=123 SRC="../assets/images/auto_generated_images/Summary_AltElasticButton.gif"  BORDER=0  ALT=" URLs &amp; Notes " ></A></TD>
	 </TR>
	  </TABLE></TD>
   </TR>
  </TABLE></TD>
<TD>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=621>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=619 HEIGHT =32 COLSPAN=2>
<P ALIGN="CENTER"><FONT SIZE="-2" FACE="Arial,Helvetica,Univers,Zurich BT">ATTENTION: This work is copyright 1998 </FONT><A HREF="mailto:octpg1@ptinet.net"><FONT SIZE="-2" FACE="Arial,Helvetica,Univers,Zurich BT">Ron Andrade</FONT></A><FONT SIZE="-2" FACE="Arial,Helvetica,Univers,Zurich BT"> for Portal Special Edition. Do not duplicate for other than your own purposes or redistribute without the permission of the author: Ron Andrade (Gadget Factor)</FONT></TD>
	<TD></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=9 HEIGHT =11><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =9 HEIGHT=1 BORDER=0></TD>
	<TD WIDTH=610><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =610 HEIGHT=1 BORDER=0></TD>
	<TD WIDTH=2><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =2 HEIGHT=1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=621 COLSPAN=3>
<P ALIGN="CENTER"><FONT SIZE="-1" FACE="Bookman Old Style">Second Edition is Sponsored by</FONT></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD COLSPAN=3 HEIGHT =1></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=621 HEIGHT =54 COLSPAN=3><table width=621 height=54><tr align=left valign=top><td>

<center>
<!--Begin Flycast Ad Copyright 1998 Flycast Communications. All rights reserved. Patent Pending --> 
<SCRIPT LANGUAGE="JAVASCRIPT"> 
<!--
FlycastSite= "Mplayer";
FlycastPage= "WWIIROS";
FlycastWidth= 468;
FlycastHeight= 60;
FlycastPrintTag= true;
FlycastNewAd= true;
FlycastLoaded= false;
FlycastVersion= 1.1;
//--> 
</SCRIPT> 
<SCRIPT SRC="http://adex3.flycast.com/FlycastUniversal/" LANGUAGE="JAVASCRIPT"></SCRIPT>
<SCRIPT LANGUAGE="JAVASCRIPT"> 
<!-- 
if (FlycastLoaded) FlycastDeliverAd(); 
//--> 
</SCRIPT> 
<NOSCRIPT><IFRAME SRC="http://adex3.flycast.com/server/socket/127.0.0.1:2800/iframe/Mplayer/WWIIROS/123" scrolling="no" marginwidth=0 marginheight=0 frameborder=0 vspace=0 hspace=0 width=468 height=60><A target=_top HREF="http://adex3.flycast.com/server/socket/127.0.0.1:2800/click/Mplayer/WWIIROS/123"><IMG SRC="http://adex3.flycast.com/server/socket/127.0.0.1:2800/img/Mplayer/WWIIROS/123" border=0 width=468 height=60></A></IFRAME></NOSCRIPT> 
<!--End Flycast Ad Copyright 1998 Flycast Communications. All rights reserved. Patent Pending --> 
</center>
</td></tr></table>
</TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD COLSPAN=3 HEIGHT =16></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD></TD>
	<TD WIDTH=612 COLSPAN=2>
<P><B><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Monsters, creatures and things will round-off this tutorial.</P>
<P></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT"></FONT></B><FONT FACE="Arial,Helvetica,Univers,Zurich BT">NOTE: This chapter is a compilation of many <I>great</I> information pieces found at different sources. If information provided here is your work - and you wish for the Special Edition to cease and desist - let us know and we will. Credit is provided and the end of this chapter to all sources where this information was obtained.</P>
<P>Special Note:Before you can place monsters, creatures and things - you need to know where they are.&nbsp; :-)<BR>In your object library, switch to the classes category, using the pop-down menu. Expand the Pawns class, then expand the ScriptedPawns class. You will find a full shopping cart of ghoulies you can throw into your map.&nbsp; :-)</P>
<P>At this point, your level is now basically complete for deathmatch games when played on the Internet with other players. However, to allow your player to use your level in a deathmatch game using robots or “bots” on his local hard disk, you need to add them - and tell them what to do.</P>
<P>The first item of business for this to occur, is that you need to give the other players “spawn” points. These are simply Player Start locations. If you have a single Player Start location, problems will arrise during a deathmatch game.</P>
<P>The first PlayerStart location placed into your level will be where the player will spawn in single player games and at the beginning of “botmatch” games. Each additional player start location will host your bots and other players during death match games on the Internet. Once a multi-player or bot game is in progress, players and bots will respawn at random player start locations.</P>
<P>At this point, go ahead and create several new player start locations throughout your level. Add an addition 15 locations to your first - you can place them practically anywhere. Ensure the player will fit in the location (remember, some players may be dressed and Skaarj or other large creatures.)</P>
<P>Also, be sure the player can exit from the player start location to get back into the action.</P>
<P>Once this is done, we will create <B>pathnodes</B> - the `railroad´ tracks that will allow your creatures and bots to move around with a purpose. Rebuild your geometry and save your map.</P>
<P>Pathnodes are what tell the bots and other Artificial Intelligence creatures in Unreal about your map. They cannot see or think like you, so they need instruction on where they can go and what they can do.</P>
<P>There are many ways to add pathnodes to your level. However, to ensure clarity, this tutorial will take you on what some may call the “long way around.” Adding pathnodes will be a lot like adding your decoration and lighting. You will be working from your camera view - following along your map and adding these pathnodes.</P>
<P>In your object library, select the <I>classes</I> category. Within classes, select <B>NavigationPoint</B> &gt; <B>PathNode</B>.</P>
<P>Find a good starting location and navigate your camera to that area. To add a pathnode, right-click the floor surface and choose “add PathNode here.´ You will see an apple icon. When adding pathnodes, keep in mind that all pathnodes must be visible from the adjoining pathnode. In other words, if you are standing on a pathnode, you <I>must</I> be able to see the next pathnode you can go to. Pathnodes are nothing more that “dots” in a connect the dots puzzle. However, you must see each dot from the previous dot - and one dot can lead to several other dots.</P>
<P>You may get a warning that the “actor does not fit here” - in which case, you need to move the pathnode to the side or away from the offending structure. Continue cruising through your level, dropping pathnodes like bread crumbs. Remember that each pathnode must be visible from the previous pathnode - and place them no more than 600 units away - the closer, the better.</P>
<P>For security, place a pathnode on each of your playerstart locations, too.</P>
<P>Once you have your pathnodes all set, Click the <I>Window</I> menu and select <B>Log</B>. This is a command prompt window. Scroll to the bottom of the list and enter the following command:</P>
<P></FONT><FONT FACE="Courier New,Courier"><TT>paths define</P>
<P></TT></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT">As explained by Myscha the Sled Dog on </FONT><A HREF="http://www.unrealized.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Unrealized</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT">: “The editor will now begin scrolling through and analyzing all the pathnodes and begin generating &quot;reachspecs&quot; and Inventoryspot markers.”</P>
<P>Once the log calculations are complete, select the <I>view</I> menu in any of the axis or camera views and choose “show paths.” Your map, in that view, will display a series of red and blues lines. </P>
<P><B>Red</B> paths are good for your bots. They will have no problem (theoratically) navigating these pathnodes. If a line is missing between two or more pathnodes, you may want to add more pathnodes in that area.</P>
<P><B>Blue</B> paths are ar really good thing. Blue means the larger creatures can also nevigate the path. This is necessary for the monsters and such you will add for your single-player game - not to mention those deathmatch players wearing monster outfits.</P>
<P>Myscha suggests you play the map in a team game - and follow one of the bots around to ensure it is getting to areas you intend to be accessible to them. A note about doors and lifts: if you want your bot to be able to travel through doors, be sure to place pathnodes right next to the door - on both sides and be sure the path crosses over the trigger that opens the door.</P>
<P>As for lifts, there are two special `actors´ called Lift Exit and Lift Center. These tell your bots how the lift works. These are pretty self explanatory: Place a lift exit immediately next to the lift and a lift center in the center of the lift - one at the top and one at the bottom.</P>
<UL><B>
<P>LiftCenter:</B>&nbsp; The LiftTag should be set to the tag of the lift it is on.<BR><B>LiftExit: </B> LiftTag should be set to the tag of the lift they are associated with.</P>
</UL>
<P>Myscha offers these tips on pathnode placement:
<UL TYPE="DISC">
<LI>Always place one path at the top and one at the bottom of a stair or ramp. If the ramp is longer than 512 units you may need a pathnode or two along the way. Be sure to select any paths added along the run of a ramp and slide them downward so that their collision box is not partially inside the ramp. </LI>
<LI>With narrow openings between columns or arches, place one path on either side and not one path in the middle of the arch. Look at DMTundra's arch pathnode layout for an idea about this. </LI>
<LI>Think in 3D - If a path is along the bottom of a pool of water-the creature will need to be able to see a path out of the water to figure out how to get out. Make sure water to dry land paths connect up. </LI>
<LI>If you move or add a pathnode you must &quot;define paths&quot; again repeat [the instructions provided] above. </LI>
<LI>Bots run at the same speed as the player, and can jump just as far. If you see any &quot;shortcut jumps feel free to place paths there. The bots will understand these and make the jump. </LI>
<LI>Bots LOVE the Shield Belt - If they tend to hover around it too much-place it in a HIGH COMBAT area so they will all kill each other rather than camp on it. </LI>
<LI>Keep paths about 32-48 units off the walking surface. </LI>
<LI>Bots have better vision than you in regards to light and darkness-remember that when you play. </LI>
</UL>
<P><HR ID="HRRule5" WIDTH=88% ALIGN=CENTER SIZE=2>To help you understand the placement of pathnodes more clearly, the following is a quote from Tim Sweeney´s </FONT><A HREF="../assets/images/creature.rtf"><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><B>Unreal Creature care and Feeding Guide</B></FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><B> </B>- it is strongly recommended you obtain this document as it will give you far greater insight into the Unreal AI system and provide you with incredible ideas:</P>
<UL></FONT><FONT FACE="Times New Roman,Times,Times NewRoman">
<P>All navigation points have a bPlayerOnly attribute.&nbsp; If set to true, it means that only Players (bots) will use this path for navigation.&nbsp; Its not perfect, but if you put two in a row along a hallway with turns, it will probably keep the creatures from going through that hall.&nbsp; Exceptions are if the creature is close behind a player and in hot pursuit, or if he is already very close to the path when he tries to use navigation</P>
<P>LiftCenter:&nbsp; Place this Navigation Point at the spot on a lift you want the creature to stand while using the lift.&nbsp; Its LiftTag should be set to the tag of the lift it is on.</P>
<P>LiftExit:&nbsp; LiftExits should be place at the spots you want creatures to wait before getting on a lift.&nbsp; Their LiftTag should be set to the tag of the lift they are associated with.</P>
</UL>
<P></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Any creature can be made to play any animation with Patrol Points or Alarmpoints - covered later in this chapter.</P>
<P><IMG id="Picture7" HEIGHT=252 WIDTH=352 SRC="../assets/images/Image1.gif"  VSPACE=0 HSPACE=6 ALIGN=RIGHT BORDER=0  ALT="Image1" ><HR ID="HRRule1" WIDTH=86% ALIGN=CENTER SIZE=2>Creating a mover that follows a path is done by using <B>path points</B>. This section of Special Edition was written by <B><I>Lurch </I></B>and found at </FONT><A HREF="http://www.unrealnation.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">UnrealNation</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT">:</P>
<UL><B>
<P>PATH POINTS<BR></B>By Lurch</P>
<P></FONT><FONT FACE="Times New Roman,Times,Times NewRoman">1. Make a mover and don't give it any key frames. </P>
<P>2. Add in <B>PathPoints</B> [under Keypoint], and under their properties go to <B>PathPoint</B> and give the numbers starting at <B>0</B> through as many as you want (but you can't have more than <B>33</B>). They're two other var. in this area, curveSpeed and speedU. First the curveSpeed is for how fast the brush will rotate and second the speedU is how fast the brush goes through the PathPoints.</P>
<P>3. Now add an <B>ObjectPath</B> (it doesn't matter where) open its properties and go to <B>ObjectPath</B>. Under <B>PathActorTag</B> give it the <B>Tag</B> of your mover. You also need to go to advanced properties and set the <B><U>static</U></B> var. to false. You will also notice under ObjectPath that there are 4 other fields bAlterPitch, Roll, Yaw, and Radjust. If you set the Pitch, Roll, and Yaw to true then the mover will move in the proper way to the way the PathPoints are placed. And Radjust is to set the initial state of the mover.</P>
<P><IMG id="Picture8" HEIGHT=332 WIDTH=352 SRC="../assets/images/Image2.gif"  VSPACE=0 HSPACE=6 ALIGN=LEFT BORDER=0  ALT="Image2" >4. Now select all <B>PathPoints</B>, and the <B>ObjectPath</B>, and give them all the same <B>Tag</B> under <B>Events</B>.</P>
<P>5. Make a trigger and give it the event of the <B>PathPoints</B>, and the <B>ObjectPaths</B> tag. And there you go!</P>
<P>The way this works is kinda weird, when using the object path method Unrealed makes a bezier spline between the <B>PathPoints</B> but the mover will actually start at the second <B>PathPoint</B> and stop at the second to the last <B>PathPoint</B>. It uses the first and last <B>PathPoints</B> for directional purposes. </P>
<P></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Submitted by </FONT><A HREF="mailto:lurch@unrealnation.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><U>Lurch</U></FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><U></U> @ Screaming In Digital<BR></FONT><A HREF="http://www.unrealnation.com/sid/"><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><U>www.unrealnation.com/sid/</P>
</UL>
<P></U></FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><U><HR ID="HRRule2" WIDTH=84% ALIGN=CENTER SIZE=2></U></FONT><B><I>Monster and Creatures</P>
<P></I></B><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Monsters and creatures are usually used for single player games. One of the tricks with these actors is getting them to roam around or hunt other creatures and players in a logical manner.</P>
<P>Ater placing a creature in your map, open the properties box for him. In the <B>orders</B> section, set the <I>bFixedStart</I> to <B>false</B>. In the Orders field, enter “roaming” - without quotes. This creates a monster that will roam around without the need of pathnodes or patrol points.</P>
<P>Based on the previous chapters of this tutorial, you will see there are many variables for creatures. These variables will not be explained here as you should, by now, be accustomed to experimenting with these settings. Beside that, the Creature Care and Feeding Guide contains very detailed information about these settings.</P>
<P><B>A Thing or Creature Factory</B> will allow you to heave creatures at the player - one after another. Because the creature will “appear” out of nowhere, these factories use <I>spawn points</I> that should be placed in a location not directly visible to the player. Around an inaccessible corner or on an inaccessible ledge would be a good idea.</P>
<P>Factories are usually triggered. The triggers event that matched a factory´s tag will initiate that factory. A factory is also a trigger in itself, as it will begin producing when the player touches it. Here, your own imagination and creativity is the limit. Each factory can have up to sixteen spawn points and is activated via a trigger. An example might be a zone trigger, where the player enters a zone, the zone info´s event triggers a factory´s tag - thereby causing the factory to produce its things or creatures. Furthermore, each spawn point can trigger another event - when a creature or thing is spawned from that point, the event is triggered.</P>
<P>The possibilities are boundless! See the quickie tutorial for a thing factory near the end of this chapter.</P>
<P>When a creature or thing generated by a factory is killed or dies - its default event triggers the factory to spawn another thing or creature. The factory properties are:</P>
<UL><B>
<P>Prototype:</B>&nbsp;&nbsp; The thing or creature this factory produces<BR><B>MaxItems:</B>&nbsp;&nbsp; This is the number of creatures or things that will be allowed in the world <I>simultaneousely </I>from this factory<I>. </I>If the factory is a creature factory - it will create all the creatures initially - then recreate the creatures - up to the maxitems allowed - as each existing creature dies - up to the capacity of the factory.<BR><B>Capacity:</B>&nbsp;&nbsp; This the the maximum number of things or creature this factory will produce. When this limit is reached, the factory will shut down. If a value of -1 is enetered, the capacity is unlimited.<BR><B>AddedCoopCapacity:</B>&nbsp;&nbsp; If the game is cooperational, these are added items to be produced beyond the capacity.<BR><B>Interval:</B>&nbsp;&nbsp; The average time length between spawns.<BR><B>timeDistribution:</P>
<UL>
<P>Dist_Constant: </B>&nbsp; Always equal to Interval<BR></FONT><B>Uniform:</B>&nbsp;&nbsp; Random time between 0 and 2 x interval<BR><B>Gaussian:&nbsp;&nbsp; </B>Mean = interval<B> </P>
</UL>
<P><FONT FACE="Arial,Helvetica,Univers,Zurich BT">bOnlyPlayerTriggered: </FONT></B><FONT FACE="Arial,Helvetica,Univers,Zurich BT">&nbsp; (True by default) - self explanatory<BR><B>bCovertL:</B>&nbsp;&nbsp; Only performs hidden spawns. Defaults: Creature = True / Thing = False<BR><B>bStoppable:</B>&nbsp;&nbsp; The factory will stop if touched<BR><B>Orders:&nbsp;&nbsp; </B>(Creature only) - these will be the creature´s orders<BR><B>OrderTag:&nbsp;&nbsp; </B>By default they will attack the instigator of the factory.<BR><B>ItemTag:</B>&nbsp;&nbsp; Tag given to items produced by this factory<BR><B>AlrmTag:</B>&nbsp;&nbsp; (Creature factory only) AlarmTag given to creatures produced by this factory</P>
</UL>
<P>Myscha´s tips:</P>
<UL>
<P>Creatures should be spawned for a logical reason - for example they should <B>NOT</B> simply appear in thin air. Spawn them inside of structures and have them come out. Like out of ceiling ductwork etc. Remember the Creature Factory actor itself can be used to trigger it. You'll need to adjust the collision radius to work well if so. The <I>TAG</I> of a creature factory must match the <I>TAG</I> of the spawnpoints (this is unique to creature factories normally it would be <I>event</I> to <I>tag</I>) </P>
</UL>
<P>Myscha offers these pointers on <B>Patrol Points</B> and&nbsp; <B>Alarm Points:</P>
<UL>
<P>Patrolling</P>
<P></B>Patrolling creatures will patrol along a set of Patrolpoints (a subclass of NavigationPoint) specified by the level designer. The creature's <I>OrderTag</I> should contain the tag of the first <I>Patrolpoint</I> in its patrol. <BR>When a creature reaches a Patrolpoint, it will pause for the <I>PauseTime</I> specified in the patrol point, facing in the direction the Patrolpoint is oriented. While pausing, it will play waiting/patrolstop animations. If a <I>PatrolAnim</I> is specified, the creature will play that specific animation the number of times specified by <I>NumAnims</I>. <BR>Each time it plays the animation, it will also play the <I>PatrolSound</I> if one is specified. </P>
<P>Note that the amount of time creatures playing a PatrolAnim pause depends on how long it takes to play the animation NumAnims times, and not the pause time. However, the PauseTime must still be set to a positive number. It will then continue to the Patrolpoint specified in the <U>current</U> Patrolpoint's <I>NextPatrol</I>. If a creature cannot reach the next patrol point, it will wait at its current position. If <I>bFixedStart</I> is false, the creature will start at some random point along his patrol route (not yet implemented).</P>
<P><B>Alarm Points</P>
<P></B>Alarmpoints are designed to be used in conjunction with the alarmtag to cause creatures to perform complex actions upon seeing a player. If the Alarmpoint's event is set, it will trigger all creatures with that tag when the alarm creature reaches the Alarmpoint. The attributes are: </P>
<P><B>NextAlarm:&nbsp;&nbsp; </B></FONT><FONT FACE="Marydale">The next alarmpoint to go to after this one. If none, the creature will revert to normal AI after completing the actions specified by this point. <BR></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><B>PauseTime:&nbsp;&nbsp; </B>How long to pause at this alarmpoint. <BR><B>DuckTime:</B>&nbsp;&nbsp; How long to pause after playing the AlarmAnim (only used if an AlarmAnim is specified). Its called ducktime, because a typical use would be to have the creature duck, wait for ducktime, and then stand up and shoot (if bAttackWhilePaused is true). If you want to the creature to track the player while ducking, be sure to set bAttackWhilePaused. <BR><B>AlarmAnim:</B>&nbsp;&nbsp; If specified, the creature will play this animation upon reaching the alarmpoint, as well as the AlarmSound if specified. <BR><B>bStrafeTo:</B>&nbsp;&nbsp; If true, and the creature can strafe, then the creature will strafe to this AlarmPoint, facing the enemy player. If the creature has a moving attack, it will fire while strafing if it has a clear shot.<BR><B>bAttackWhilePaused:</B>&nbsp;&nbsp; If true, the creature will shoot at the player while paused (unless he has a ShootTarget). If the player is not visible, the creature will fire at where he last saw the player.<BR><B>bNoFail:</B>&nbsp;&nbsp; If true, the creature will never give up trying to get to this Alarmpoint (just as it never gives up trying to get to other alarmtag actors). If false, and the creature gets knocked off its path, it may give up if it can no longer easily get to the alarmpoint.<BR><B>bStopIfNoEnemy:</B>&nbsp;&nbsp; If true, and the enemy is not visible, creature will stop at this Alarmpoint until it sees the enemy again. Otherwise, it will continue progessing through the Alarm actions.<BR><B>bKillMe:</B>&nbsp;&nbsp; Any creatures that are triggered by this alarmpoint (their tag = the alarmpoint's event) will hate and kill the triggering creature, even if they wouldn't normally.<BR><B>bDestroyAlarmTriggerer:</B>&nbsp;&nbsp; When a creature reaches this alarmpoint (and it is the creature's alarmtag destination), the creature is immediately destroyed. <BR><B>ShootTarget:&nbsp;&nbsp; </B>If bAttackWhilePaused is true and ShootTarget has the tag of some actor, the creature will fire at that actor rather than the player.<BR><B>AlarmSound:</B>&nbsp;&nbsp; If an AlarmAnim is specified, the AlarmSound will be played in conjunction with the AlarmAnim. </P>
<P>The animations available and their names are indicated in the MESH VIEWER.</P>
</UL>
<P><B>A quickie Thing Factory tutorial:</P>
<P></B>Create a simple map: two rooms, one large (200x800x800 (height-width-breadth)) and a smaller, but deeper hallway (200x800x100) - attach the hall to the main room at one of the corners and add lights.</P>
<P>Add the following items:</P>
<UL>
<P>A PlayerStart - near the far corner away from the hallway.<BR>A large cube or other object - in the center of the room.<BR>A SpawnPoint (under NavigationPoint) - inside the hallway at the far end away from the entrance.<BR>A Thing Factory (under keyPoint) near (but not inside) the cube at the center of the large room.</P>
</UL>
<P>Open the properties for the Thing Factory and set the following:</P>
<UL><B>
<P>bCovert</B> = false : This allows the thing factory to spawn things even though you are looking at it.<BR><B>bFalling</B> = false : This will not force the thing to fall to the floor.<BR><B>MaxItems</B> = 1000 : Allowing 1000 items in the world simultaneousely.<BR><B>Prototype</B> = Class'Unreall.WarlordRocket : Select this from the “Projectile” classes.</P>
<P>In the <B>Events</B> section, set the TAG to “Rocket” - without quotes.</P>
</UL>
<P>Open the SpawnPoint´s properties and set its TAG to “Rocket” - without quotes.</P>
<P>Rebuild geometry and save the level. Press CTRL-P to play. Walk around the cube until you trigger the thing factory and you will see a major volley of rockets spitting out of the hallway.&nbsp; :-)</P>
<P></FONT>
<DIV ALIGN=CENTER>
<TABLE WIDTH=403 BORDER=0 CELLSPACING=0 CELLPADDING=0><TR>
<TD><IMG id="SiteStyleLine1" HEIGHT=42 WIDTH=403 SRC="../assets/images/ElasticLine.gif"  BORDER=0 ></TD></TR></TABLE>
</DIV>
<FONT FACE="Arial,Helvetica,Univers,Zurich BT"></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT">NOTE: The Special Edition in whole is copyright 1998, Ron Andrade, A.K.A. Gadget Factor. Portions are copyright by their respective owners:<BR></FONT><A HREF="http://www.planetunreal.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Planet Unreal</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><BR></FONT><A HREF="http://www.mplayer.com/action/unreal/"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Unreal Kingdom</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><BR></FONT><A HREF="http://www.unrealized.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Unrealized</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><BR></FONT><A HREF="http://www.unrealnation.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">UnrealNation</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"></P>
<P></FONT><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Also: Special thanks to<BR></FONT><A HREF="http://www.unreal.com"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Epic Megagames</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"><BR></FONT><A HREF="http://megaboard.epicgames.com/"><FONT FACE="Arial,Helvetica,Univers,Zurich BT">Epic Megaboard</FONT></A><FONT FACE="Arial,Helvetica,Univers,Zurich BT"> and its contributors<BR>Tim Sweeney<BR>Myscha the Sled Dog</FONT></TD>
   </TR>
  </TABLE></TD>
</TR>
</TABLE>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=752>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=131 HEIGHT =90><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =131 HEIGHT=1 BORDER=0></TD>
	<TD WIDTH=621><IMG SRC="../assets/images/auto_generated_images/clearpixel.gif" WIDTH =621 HEIGHT=1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD></TD>
	<TD WIDTH=621>
<P ALIGN="CENTER"><A HREF="../html/inventory.html"><FONT SIZE="-1" FACE="Bookman Old Style">Previous Chapter</FONT></A><FONT SIZE="-1" FACE="Bookman Old Style"> | </FONT><A HREF="../index.html"><FONT SIZE="-1" FACE="Bookman Old Style">Home</FONT></A><FONT SIZE="-1" FACE="Bookman Old Style"> | </FONT><A HREF="../html/summary.html"><FONT SIZE="-1" FACE="Bookman Old Style">Next Chapter</FONT></A><FONT SIZE="-1" FACE="Bookman Old Style"></FONT></TD>
   </TR>
  </TABLE></BODY>
</HTML>
